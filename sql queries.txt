-- What is the total amount each customer spent at the restaurant?

select s.customer_id, sum(m.price) as total_amount
from menu m
join sales s  
	using(product_id)
group by s.customer_id

-- How many days has each customer visited the restaurant?

select s.customer_id, COUNT(distinct s.order_date) as no_of_days 
from sales s
group by s.customer_id

-- What was the first item from the menu purchased by each customer?

select customer_id, product_name, order_date from(select s.customer_id, m.product_name, s.order_date,
row_number() over(partition by s.customer_id order by s.order_date) as rn
from menu m
join sales s  
	using(product_id)) s
where rn = 1

-- What is the most purchased item on the menu and how many times was it purchased by all customers?

select m.product_name, count(s.order_date) as ttime
from menu m
join sales s  
	using(product_id)
group by m.product_name
order by ttime desc
limit 1

-- Which item was the most popular for each customer?

WITH cust_pop
AS (
SELECT customer_id
    , product_id
    , COUNT(product_id) AS order_count
FROM sales
GROUP BY customer_id, product_id)

SELECT customer_id
    , product_name
FROM
    (SELECT c.customer_id
        , m.product_name
        , DENSE_RANK() OVER(PARTITION BY customer_id ORDER BY order_count DESC) AS ran
    FROM cust_pop c
    JOIN menu m USING(product_id)) AS fav
WHERE ran = 1

-- Which item was purchased first by the customer after they became a member?

select * from (select s.customer_id, m.product_name, me.join_date, s.order_date, dense_rank() over(partition by s.customer_id order by order_date) as rn
from menu m
join sales s  
	using(product_id)
join members me
	using(customer_id)
where join_date <= order_date) as c
where rn = 1

-- What is the total items and amount spent for each member before they became a member?

select s.customer_id, count(order_date) as tol, sum(m.price) as su-- , dense_rank() over(partition by s.customer_id order by order_date) as rn
from menu m
join sales s  
	using(product_id)
join members me
	using(customer_id)
where join_date > order_date
group by s.customer_id
order by s.customer_id

-- If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

select s.customer_id, sum(
case 
	when m.product_name = 'sushi' then (m.price * 20)
    else (m.price * 10)
end ) as points
from menu m
join sales s  
	using(product_id)
join members me
	using(customer_id)
group by s.customer_id

-- In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

select s.customer_id,
sum(case 
	when m.product_name = 'sushi' then (m.price * 20)
	when order_date between join_date and DATE_ADD(join_date ,INTERVAL 6 DAY) then (m.price * 20)
    else (m.price * 10)
end)  as points
-- join_date, order_date, DATE_ADD(join_date ,INTERVAL 6 DAY) as first_week
from menu m
join sales s  
	using(product_id)
join members me
	using(customer_id)
where order_date < '2021-02-01'
group by s.customer_id







